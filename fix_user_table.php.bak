<?php
// اسکریپت تست و رفع مشکل در جدول user

// اتصال به دیتابیس
require_once __DIR__ . '/functions.php';
global $pdo;

echo "شروع بررسی و رفع مشکل جدول user...<br>";

try {
    // بررسی ساختار جدول user
    echo "بررسی ساختار جدول user...<br>";
    $result = $pdo->query("SHOW COLUMNS FROM user");
    $columns = $result->fetchAll(PDO::FETCH_COLUMN);
    
    echo "ستون‌های موجود در جدول user:<br>";
    echo "<pre>" . print_r($columns, true) . "</pre>";
    
    // بررسی کوئری INSERT مشکل‌دار
    $from_id = 123456789; // آیدی تست
    $username = "test_user"; // نام کاربری تست
    $verify = 1;
    $limit_usertest_all = 0;
    
    echo "آزمایش کوئری INSERT که خطا می‌دهد:<br>";
    
    // روش 1: استفاده از prepared statement با ستون‌های مشخص
    try {
        $stmt = $pdo->prepare("INSERT IGNORE INTO user 
            (id, step, limit_usertest, User_Status, number, Balance, pagenumber, username, message_count, last_message_time, affiliatescount, affiliates, verify) 
        VALUES 
            (:from_id, 'none', :limit_usertest_all, 'Active', 'none', '0', '1', :username, '0', '0', '0', '0', :verify)");
            
        $stmt->bindParam(':verify', $verify);
        $stmt->bindParam(':from_id', $from_id);
        $stmt->bindParam(':limit_usertest_all', $limit_usertest_all);
        $stmt->bindParam(':username', $username, PDO::PARAM_STR);
        $stmt->execute();
        
        echo "روش 1 موفقیت‌آمیز بود.<br>";
    } catch (PDOException $e) {
        echo "خطا در روش 1: " . $e->getMessage() . "<br>";
    }
    
    // روش 2: استفاده از کوئری مستقیم
    try {
        $sql = "INSERT IGNORE INTO user 
            (id, step, limit_usertest, User_Status, number, Balance, pagenumber, username, message_count, last_message_time, affiliatescount, affiliates, verify) 
        VALUES 
            ('987654321', 'none', '0', 'Active', 'none', '0', '1', 'test_user2', '0', '0', '0', '0', '1')";
        $pdo->exec($sql);
        
        echo "روش 2 موفقیت‌آمیز بود.<br>";
    } catch (PDOException $e) {
        echo "خطا در روش 2: " . $e->getMessage() . "<br>";
    }
    
    // روش 3: استفاده از حداقل ستون‌ها
    try {
        $stmt = $pdo->prepare("INSERT IGNORE INTO user (id, step) VALUES (:from_id, 'none')");
        $stmt->bindParam(':from_id', $from_id);
        $stmt->execute();
        
        echo "روش 3 موفقیت‌آمیز بود.<br>";
    } catch (PDOException $e) {
        echo "خطا در روش 3: " . $e->getMessage() . "<br>";
    }

    // پیشنهاد راه حل دائمی
    echo "<br><br>پیشنهاد راه حل دائمی:<br>";
    echo "1. درج کوئری زیر را در ابتدای فایل index.php قبل از خط 55 اضافه کنید:<br>";
    echo "<pre>
    // اصلاح کوئری INSERT
    \$stmt = \$pdo->prepare(\"INSERT IGNORE INTO user (id, step) VALUES (:from_id, 'none')\");
    \$stmt->bindParam(':from_id', \$from_id);
    \$stmt->execute();
    
    // سپس بقیه اطلاعات را با UPDATE به‌روزرسانی کنید
    \$verify_value = (intval(\$setting['status_verify']) == 1) ? 0 : 1;
    \$stmt = \$pdo->prepare(\"UPDATE user SET 
        limit_usertest = :limit_usertest_all,
        User_Status = 'Active',
        number = 'none',
        Balance = '0',
        pagenumber = '1',
        username = :username,
        message_count = '0',
        last_message_time = '0',
        affiliatescount = '0',
        affiliates = '0',
        verify = :verify
    WHERE id = :from_id\");
    
    \$stmt->bindParam(':verify', \$verify_value);
    \$stmt->bindParam(':from_id', \$from_id);
    \$stmt->bindParam(':limit_usertest_all', \$setting['limit_usertest_all']);
    \$stmt->bindParam(':username', \$username, PDO::PARAM_STR);
    \$stmt->execute();
    </pre>";
    
    echo "2. یا یک فایل جدید به نام fixed_index.php ایجاد کنید و کد بالا را جایگزین کوئری در خط 55 کنید.<br>";
    
} catch (PDOException $e) {
    echo "خطا در بررسی جدول: " . $e->getMessage();
}
?> 